user nginx;
worker_processes auto;
pid /var/run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;
events {
        worker_connections 1024;
}
http {

  sendfile on;
  tcp_nopush on;
  types_hash_max_size 2048;
  charset utf-8;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  ##
  # Logging Settings
  ##

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  upstream client {
    server web:3000;
  }
  upstream backend {
  	server backend:3030;
  }

  server {
    listen 80;
    listen [::]:80;
    server_name localhost;
    root /var/www/html;

    location /api {
      proxy_pass http://backend;
      proxy_redirect off;
      return 301 https://$server_name$request_uri;
    }

    location / {
      proxy_pass http://client;
      proxy_redirect off;
      return 301 https://$server_name$request_uri;

    }
  }

  server {
    listen      443 ssl;
    server_name localhost;

    location /api/ {
      rewrite ^/api(.*) $1 break;
      proxy_pass http://backend;

      proxy_redirect off;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location / {
      proxy_pass http://client;

      proxy_redirect off;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    ssl_certificate     /var/lib/minica/minica.pem;
    ssl_certificate_key /var/lib/minica/minica-key.pem;
  }
}
