name: Request
on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  check_header:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Check commit message
        run: |
          COMMIT_MSG=$(git log --format=%B -n 1 ${{ github.sha }})
          if [[ $COMMIT_MSG == *"[skip ci]"* ]]; then
            echo "Commit message contains [skip ci]. Skipping workflow."
            exit 0
          fi

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install

      - name: Get pushed files
        id: get_pushed_files
        run: |
          pushed_files=$(git diff-tree --no-commit-id --name-status -r ${{ github.sha }})

          echo ${pushed_files}

          # set multiline output parameter
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "PUSHED_FILES<<$EOF" >> "$GITHUB_OUTPUT"
          echo "${pushed_files}" >> "$GITHUB_OUTPUT"
          echo "$EOF" >> "$GITHUB_OUTPUT"

      - name: Get JWT
        id: get_jwt
        run: |
          jwt=$(curl -X Post -H "Content-Type: application/json" -d '{"id": ${{ secrets.USER_ID }}, "password": ${{ secrets.USER_PASSWORD }}}' ${{ secrets.SERVER_URL }}/auth/login | jq -r '.access_token')
          echo jwt is $jwt

      - name: Send request to server
        id: request
        env:
          SERVER_URL: ${{ secrets.SERVER_URL }}
        run: |
          pushed_files="${{ steps.get_pushed_files.outputs.PUSHED_FILES}}"
          npm run send "${pushed_files}"

      - name: Set up Git
        run: |
          git config --local user.email ${{ secrets.EMAIL }}
          git config --local user.name ${{ secrets.USER_NAME }}
          git config --local user.password ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Check for Markdown changes
        id: check_changed_files
        run: |
          changed_files=$(git diff --name-only HEAD HEAD^ | grep -E '\.md$')

          if [ -n "$changed_files" ]; then
            echo "Markdown files changed"
            echo "md_changed=true" >> $GITHUB_OUTPUT
          else
            echo "No Markdown files changed"
            echo "md_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.check_changed_files.outputs.md_changed == 'true'
        run: |
          git add .
          git commit -m "[skip ci] Inject Post ID"
          git push
